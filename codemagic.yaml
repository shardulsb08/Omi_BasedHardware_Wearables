workflows:
  android-prod-internal:
    name: Release Android Product Internal
    instance_type: mac_mini_m1
    max_build_duration: 120
    environment:
      android_signing:
        - prod_android_upload_keystore
      groups:
        - app_env
        - firebase
        - google_credentials
      vars:
        PACKAGE_NAME: "com.friend.ios"
        GOOGLE_PLAY_TRACK: "internal"
      flutter: 3.22.3   # Define the channel name, version (e.g. v1.13.4), or fvm for Flutter Version Management
      xcode: 15.4       # Define latest, edge or version (e.g. 11.2)
      cocoapods: 1.15.2 # Define default or version
      #ndk: r27          # Define default or revision (e.g. r19c)
      java: 17          # Define default, or platform version (e.g. 11)
      #ruby: 2.7.2       # Define default or version
      #node: 12.14.0     # Define default, latest, current, lts, carbon (or another stream), nightly or version
      #npm: 6.13.7       # Define default, latest, next, lts or version
    triggering:
      events:
        - push #TODO
      branch_patterns:
        - pattern: '*_codemagic_' # TODO
          include: true
          source: true
    working_directory: app
    scripts:
      - name: Hi @thinh here
        script: |
          pwd
          which brew
      - name: Install opus
        script: |
          brew install opus
      - name: Set up .env
        script: |
          echo OPENAI_API_KEY=$OPENAI_API_KEY >> .env
          echo INSTABUG_API_KEY=$INSTABUG_API_KEY >> .env
          echo MIXPANEL_PROJECT_TOKEN=$MIXPANEL_PROJECT_TOKEN >> .env
          echo ONESIGNAL_APP_ID=$ONESIGNAL_APP_ID >> .env
          echo API_BASE_URL=$API_BASE_URL >> .env
          echo GROWTHBOOK_API_KEY=$GROWTHBOOK_API_KEY >> .env
          echo GOOGLE_MAPS_API_KEY=$GOOGLE_MAPS_API_KEY >> .env
          pwd
          cat .env
      - name: Set up firebase key
        script: |
          pwd
          echo "$FIREBASE_SERVICE_ACCOUNT_KEY" > ./firebase_key.json
          cat firebase_key.json
      - name: Set up flutterfire options
        script: |
          which flutterfire
          dart pub global activate flutterfire_cli
          flutterfire config --platforms="android,ios" --out=lib/firebase_options_prod.dart --ios-bundle-id=com.friend-app-with-wearable.ios12 --android-package-name=com.friend.ios --android-out=android/app/src/prod/  --ios-out=ios/Config/Prod/ --service-account="./firebase_key.json" --project="based-hardware" --ios-target="Runner" --yes --macos-bundle-id="xyz" --web-app-id="xyz" --windows-app-id="xyz"
      - name: Set up local.properties
        script: |
          echo "flutter.sdk=$HOME/programs/flutter" > "$CM_BUILD_DIR/android/local.properties"
      - name: Get Flutter packages
        script: |
          flutter packages pub get
      - name: Run build runner
        script: |
          dart run build_runner build
      - name: Build AAB with Flutter
        script: |
          BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks="$GOOGLE_PLAY_TRACK") + 1))      
          flutter build appbundle --release \
            --build-name=1.0.$BUILD_NUMBER \
            --build-number=$BUILD_NUMBER
    artifacts:
      - build/**/outputs/**/*.aab
      - build/**/outputs/**/mapping.txt
      - flutter_drive.log
    publishing:
      email:
        recipients:
          - ngocthinhdp@gmail.com
        notify:
          success: true
          failure: false
      google_play:
        credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
        track: $GOOGLE_PLAY_TRACK
        submit_as_draft: true
